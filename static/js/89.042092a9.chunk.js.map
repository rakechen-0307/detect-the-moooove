{"version":3,"file":"static/js/89.042092a9.chunk.js","mappings":"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","sources":["helpers/bandPass.ts","helpers/gaussianSmoothing.ts","helpers/toDataPoints.ts","helpers/downSample.ts","helpers/fileProcessWorker.ts","helpers/peaksFinder.ts","helpers/peakSelect.ts","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["var ndarray = require('ndarray');\nvar convolve = require('ndarray-convolve');\n\nexport const bandPass = (data: any, bp_coef: number[]) : any => {\n    // Check if data is an ndarray\n    if (data.shape === undefined) {\n        console.log('Warning: Data is not an ndarray');\n        data = ndarray(data);\n    }\n    // Convolution\n    const coef = ndarray(bp_coef, [bp_coef.length]);\n    var result = ndarray(new Float32Array(data.shape[0]), data.shape);\n    convolve(result, data, coef);\n\n    return result;\n}","var ndarray = require('ndarray');\nvar convolve = require('ndarray-convolve');\n\nexport const gaussianSmoothing = (data: any, smoothingStd: number) :any => {\n    console.log(smoothingStd);\n    // Check if data is an ndarray\n    if (data.shape === undefined) {\n        console.log('Warning: Data is not an ndarray');\n        data = ndarray(data);\n    }\n    let window_size = 6 * smoothingStd;\n    let gaussian_kernel = ndarray(new Float32Array(window_size+1), [window_size+1]);\n    for (let i = -window_size/2; i <= window_size/2; i++) {\n        let value = Math.exp(-i * i / (2 * smoothingStd * smoothingStd)) / (Math.sqrt(2 * Math.PI) * smoothingStd);\n        gaussian_kernel.set(i + window_size/2, value);\n    }\n\n    console.log(gaussian_kernel);\n\n    // Convolution with Gaussian kernel\n    let result = ndarray(new Float32Array(data.shape[0]), data.shape);\n    const smoothedVelocity = convolve(result, data, gaussian_kernel);\n\n    return smoothedVelocity;\n}","import { Data } from \"../types/Data\";\n\nexport const toDataPoints = (x: any, y: any) : Data[] => {\n    // Convert ndarrays to arrays\n    x = x.data ? x.data : x;\n    y = y.data ? y.data : y;\n    // Check validity of lengths\n    if (x.length !== y.length) {\n        throw new Error(\"x and y must have the same length\");\n    }\n    return x.map((x: any, i: any) => ({ x, y: y[i] }));\n} \n\nexport const toDataPointsSample = (idx: any, x: any, y: any) : Data[] => {\n    // Convert ndarrays to arrays\n    idx = idx.data ? idx.data : idx;\n    x = x.data ? x.data : x;\n    y = y.data ? y.data : y;\n    // Check validity of lengths\n    if (idx.length > y.length || idx.length > x.length) {\n        throw new Error(\"idx must have a length less than or equal to x and y\");\n    }\n    return idx.map((i: any) => ({ x: x[i], y: y[i] }));\n}","import { Data } from \"../types/Data\";\n\nexport const downsample = (dataPoints: Data[], samples: number) : Data[] => {\n    let originalSamples = dataPoints.length;\n    if (samples >= originalSamples) {\n        // If the requested number of samples is greater than or equal to the original number of samples,\n        // return the original data points.\n        return dataPoints;\n    }\n\n    let step = Math.floor(originalSamples / samples);\n    let downsampledData = [];\n\n    for (let i = 0; i < originalSamples; i += step) {\n        downsampledData.push(dataPoints[i]);\n    }\n\n    return downsampledData;\n};","/* eslint-disable no-restricted-globals */\n\nimport { bandPass } from \"./bandPass\";\nimport { gaussianSmoothing } from \"./gaussianSmoothing\";\nimport { peaksFinder } from './peaksFinder';\nimport { toDataPoints, toDataPointsSample } from './toDataPoints';\nimport { peakSelect } from './peakSelect';\nimport { downsample } from './downSample';\nimport { Data } from '../types/Data';\n\nvar ndarray = require('ndarray');\nvar ops = require('ndarray-ops');\n\nconst samples = 5000;\n\nself.onmessage = function(e) {\n    const { loadedData, params } = e.data;\n\n    // Load data\n    const datapoints: Data[] = loadedData.map((point: any) => ({\n      x: point[1],\n      y: point[2]\n    }));\n\n    // Extract x and y values\n    let time = ndarray(datapoints.map(d => d.x));\n    let velocity = ndarray(datapoints.map(d => d.y));\n\n    // Apply bandpass filter\n    const filteredVelocity = bandPass(velocity, params.bp_coef);\n    const filteredDataPoint = toDataPoints(time, filteredVelocity);\n\n    // Absolute value\n    let absVelocity = ndarray(new Float32Array(filteredVelocity.shape[0]), filteredVelocity.shape);\n    ops.abs(absVelocity, filteredVelocity);\n\n    // Apply Gaussian smoothing\n    const smoothedVelocity = gaussianSmoothing(absVelocity, params.smoothingStd);\n    const smoothedDataPoint = toDataPoints(time, smoothedVelocity);\n\n    // Normalize\n    const average = ops.sum(smoothedVelocity) / smoothedVelocity.shape[0];\n    let normalizedVelocity = ndarray(new Float32Array(smoothedVelocity.shape[0]), smoothedVelocity.shape);\n    ops.subs(normalizedVelocity, smoothedVelocity, average);\n    ops.maxs(normalizedVelocity, normalizedVelocity, 0);\n    const normalizedDataPoint = toDataPoints(time, normalizedVelocity);\n\n    // Convert back to normal array\n    velocity = normalizedVelocity.data;\n    time = time.data;\n\n    // Find peaks\n    const { locations, level } = peaksFinder(velocity, params.std, params.widthFactor);\n    let peaks = [];\n    let slopes = [];\n    for (let i = 0; i < locations.length; i++) {\n      let x0 = locations[i][0];\n      let x1 = locations[i][1];\n      let x2 = locations[i][2];\n      peaks.push({ x: x1 * params.ts, y: velocity[x1] });\n      slopes.push(toDataPointsSample([x0, x1, x2], time, velocity));\n    }\n\n    let { startLocations, endLocations } = peakSelect(velocity, locations, params.slopeThreshold, params.ratioThreshold);\n    startLocations = startLocations.map(value => value * params.ts);\n    endLocations = endLocations.map(value => value * params.ts);\n\n    const downDataPoints = downsample(datapoints, samples);\n    const downFilteredDataPoint = downsample(filteredDataPoint, samples);\n    const downSmoothedDataPoint = downsample(smoothedDataPoint, samples);\n    const downNormalizedDataPoint = downsample(normalizedDataPoint, samples);\n\n    // Send processed data back to the main thread\n    self.postMessage({\n        downDataPoints,\n        downFilteredDataPoint,\n        downSmoothedDataPoint,\n        downNormalizedDataPoint,\n        peaks,\n        slopes,\n        level,\n        startLocations,\n        endLocations\n    });\n}","export const peaksFinder = (data: number[], std: number, widthFactor: number) => {\n    const mu: number = data.reduce((accumulator, value) => (accumulator + value), 0) / data.length;   // mean\n    const sigma: number = Math.sqrt(data.map(value => Math.pow(value - mu, 2)).reduce(\n        (accumulator, value) => (accumulator + value), 0\n    ) / data.length);   // standard deviation\n    const level = mu + sigma * std;\n\n    let locations = [];\n\n    // Detect crossing points\n    let crossing_indices: number[] = [];\n    for (let i = 0; i < data.length - 1; i++) {\n        if ((data[i] < level && data[i + 1] > level) || (data[i] > level && data[i + 1] < level)) {\n            crossing_indices.push(i);\n        }\n    }\n\n    let right_most_index = 1;\n    for (let i = 0; i < crossing_indices.length - 1; i++) {\n        if (crossing_indices[i] <= right_most_index) continue;\n\n        let segment_indices = Array.from({ length: crossing_indices[i + 1] - crossing_indices[i] + 1 }, (_, j) => j + crossing_indices[i]);\n        let segment = segment_indices.map(index => data[index]);\n\n        let max_value = Math.max(...segment);\n        let max_index = segment.indexOf(max_value) + crossing_indices[i];\n\n        if (max_value <= level) continue;\n\n        // Fine-tune the peak by checking the neighborhood\n        for (let ii = crossing_indices[i] + 1; ii < crossing_indices[i + 1]; ii++) {\n            if (\n                data[ii] >= data[ii - 1] &&\n                data[ii] >= data[ii + 1] &&\n                data[ii] >= data[max_index] * 0.5 + level * 0.5\n            ) {\n                max_value = data[ii];\n                max_index = ii;\n                break;\n            }\n        }\n\n        let left_index = data.slice(0, max_index).reverse().findIndex(val => val <= max_value * widthFactor);\n        let right_index = data.slice(max_index).findIndex(val => val <= max_value * widthFactor);\n\n        left_index = left_index !== -1 ? max_index - left_index - 1 : 0;\n        right_index = right_index !== -1 ? max_index + right_index : data.length - 1;\n\n        right_most_index = max_index + (right_index - left_index);\n\n        // Store Results\n        locations.push([left_index, max_index, right_index]);\n    }\n    \n    return { locations, level };\n} ","export const peakSelect = (data: any, locations: number[][], slopeThreshold: number, ratioThreshold: number) => {\n    // Check if data is an ndarray\n    data = data.data ? data.data : data;\n    // Calculate slopes and ratios\n    let startLocations = [];\n    let endLocations = [];\n    for (let i = 0; i < locations.length; i++) {\n        let x0 = locations[i][0];\n        let x1 = locations[i][1];\n        let x2 = locations[i][2];\n        let y0 = data[x0];\n        let y1 = data[x1];\n        let y2 = data[x2];\n        let slope1 = (y1 - y0) / (x1 - x0);\n        let slope2 = (y2 - y1) / (x2 - x1);\n        console.log(slope1);\n        console.log(slope2);\n        let ratio = Math.abs(slope1 / slope2);\n        let slope = Math.abs(slope2);\n        /*\n        if (slope < slopeThreshold && ratio > ratioThreshold) {\n            selectedPeaks.push(x1 - y1 / slope1);\n        }\n        */\n        if (ratio > ratioThreshold) {\n            startLocations.push(x1 - y1 / slope1);\n            endLocations.push(x1 - y1 / slope2);\n        }\n    }\n\n    return { startLocations, endLocations };\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [464], () => (__webpack_require__(8089)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"a6679c6a\" + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.p = \"/detect-the-moooove/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t89: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunknasa_app\"] = self[\"webpackChunknasa_app\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(464).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["ndarray","require","convolve","toDataPoints","x","y","data","length","Error","map","i","toDataPointsSample","idx","downsample","dataPoints","samples","originalSamples","step","Math","floor","downsampledData","push","ops","self","onmessage","e","loadedData","params","datapoints","point","time","d","velocity","filteredVelocity","bandPass","bp_coef","undefined","shape","console","log","coef","result","Float32Array","filteredDataPoint","absVelocity","abs","smoothedVelocity","gaussianSmoothing","smoothingStd","window_size","gaussian_kernel","value","exp","sqrt","PI","set","smoothedDataPoint","average","sum","normalizedVelocity","subs","maxs","normalizedDataPoint","locations","level","peaksFinder","std","widthFactor","mu","reduce","accumulator","sigma","pow","crossing_indices","right_most_index","segment","Array","from","_","j","index","max_value","max","max_index","indexOf","ii","left_index","slice","reverse","findIndex","val","right_index","peaks","slopes","x0","x1","x2","ts","startLocations","endLocations","peakSelect","slopeThreshold","ratioThreshold","y0","y1","slope1","slope2","ratio","downDataPoints","downFilteredDataPoint","downSmoothedDataPoint","downNormalizedDataPoint","postMessage","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","__webpack_exports__","O","deferred","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","Object","keys","every","key","splice","r","f","chunkId","Promise","all","promises","u","miniCssF","g","globalThis","this","Function","window","o","obj","prop","prototype","hasOwnProperty","p","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop","next","then"],"sourceRoot":""}